global:
  resolve_timeout: 5m
  # Configura√ß√µes de SMTP (opcional)
  # smtp_smarthost: 'smtp.gmail.com:587'
  # smtp_from: 'alerts@example.com'
  # smtp_auth_username: 'alerts@example.com'
  # smtp_auth_password: 'your-password'

# Templates
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Routes
route:
  receiver: 'default-receiver'
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  
  routes:
    # Critical alerts
    - match:
        severity: critical
      receiver: 'critical-receiver'
      continue: true
    
    # Warning alerts
    - match:
        severity: warning
      receiver: 'warning-receiver'
      continue: true
    
    # Info alerts
    - match:
        severity: info
      receiver: 'info-receiver'

# Inhibition rules
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

# Receivers
receivers:
  - name: 'default-receiver'
    webhook_configs:
      - url: 'http://localhost:5001/webhook'
        send_resolved: true

  - name: 'critical-receiver'
    # Slack
    slack_configs:
      - api_url: 'YOUR_SLACK_WEBHOOK_URL'
        channel: '#alerts-critical'
        title: 'üö® Critical Alert'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
    
    # Email (opcional)
    # email_configs:
    #   - to: 'oncall@example.com'
    #     headers:
    #       Subject: '[CRITICAL] {{ .GroupLabels.alertname }}'

  - name: 'warning-receiver'
    slack_configs:
      - api_url: 'YOUR_SLACK_WEBHOOK_URL'
        channel: '#alerts-warning'
        title: '‚ö†Ô∏è Warning Alert'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  - name: 'info-receiver'
    slack_configs:
      - api_url: 'YOUR_SLACK_WEBHOOK_URL'
        channel: '#alerts-info'
        title: '‚ÑπÔ∏è Info Alert'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

