{
	"info": {
		"_postman_id": "sales-service-collection",
		"name": "Sales Service API",
		"description": "Microserviço de Vendas - Gerenciamento de clientes e pedidos de venda",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:9003/api",
			"type": "string"
		},
		{
			"key": "auth_url",
			"value": "http://localhost:9001/api",
			"type": "string"
		},
		{
			"key": "inventory_url",
			"value": "http://localhost:9002/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": ["{{base_url}}"],
					"path": ["health"]
				},
				"description": "Verifica o status do Sales Service"
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Service is ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"    pm.expect(jsonData.service).to.eql('sales-service');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login (Get Token)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testauth@example.com\",\n    \"password\": \"Test@123\"\n}"
						},
						"url": {
							"raw": "{{auth_url}}/auth/login",
							"host": ["{{auth_url}}"],
							"path": ["auth", "login"]
						},
						"description": "Faz login no Auth Service e obtém o JWT token"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"jwt_token\", jsonData.data.access_token);",
									"    pm.test(\"Token obtained\", function () {",
									"        pm.expect(jsonData.data.access_token).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "List Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/customers?page=1&per_page=15",
							"host": ["{{base_url}}"],
							"path": ["v1", "customers"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "status",
									"value": "active",
									"disabled": true
								},
								{
									"key": "search",
									"value": "silva",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os clientes com paginação"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has data and meta\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData).to.have.property('meta');",
									"    pm.expect(jsonData.meta).to.have.property('total');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"João Silva\",\n    \"email\": \"joao.silva@example.com\",\n    \"phone\": \"11987654321\",\n    \"document\": \"11144477735\",\n    \"address_street\": \"Rua das Flores\",\n    \"address_number\": \"123\",\n    \"address_complement\": \"Apto 45\",\n    \"address_city\": \"São Paulo\",\n    \"address_state\": \"SP\",\n    \"address_zip_code\": \"01234567\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/customers",
							"host": ["{{base_url}}"],
							"path": ["v1", "customers"]
						},
						"description": "Cria um novo cliente"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"customer_id\", jsonData.data.id);",
									"    pm.test(\"Customer created\", function () {",
									"        pm.expect(jsonData.message).to.include('successfully');",
									"        pm.expect(jsonData.data.id).to.be.a('string');",
									"        pm.expect(jsonData.data.status).to.eql('active');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Customer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/customers/{{customer_id}}",
							"host": ["{{base_url}}"],
							"path": ["v1", "customers", "{{customer_id}}"]
						},
						"description": "Busca um cliente por ID"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Customer data is complete\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('name');",
									"    pm.expect(jsonData.data).to.have.property('email');",
									"    pm.expect(jsonData.data).to.have.property('document_formatted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "List Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/orders?page=1&per_page=15",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "status",
									"value": "confirmed",
									"disabled": true
								},
								{
									"key": "payment_status",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "customer_id",
									"value": "{{customer_id}}",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os pedidos com filtros"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has data and meta\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData).to.have.property('meta');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": \"{{customer_id}}\",\n    \"notes\": \"Pedido de teste via Postman\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/orders",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders"]
						},
						"description": "Cria um novo pedido em status draft"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"order_id\", jsonData.data.id);",
									"    pm.test(\"Order created\", function () {",
									"        pm.expect(jsonData.message).to.include('successfully');",
									"        pm.expect(jsonData.data.id).to.be.a('string');",
									"        pm.expect(jsonData.data.status).to.eql('draft');",
									"        pm.expect(jsonData.data.order_number).to.match(/ORD-\\d{4}-\\d{4}/);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/orders/{{order_id}}",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders", "{{order_id}}"]
						},
						"description": "Busca um pedido por ID, incluindo todos os itens"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order data is complete\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('order_number');",
									"    pm.expect(jsonData.data).to.have.property('status');",
									"    pm.expect(jsonData.data).to.have.property('items');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Product from Inventory (Helper)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{inventory_url}}/v1/products",
							"host": ["{{inventory_url}}"],
							"path": ["v1", "products"]
						},
						"description": "Busca produtos do Inventory Service (necessário para adicionar item ao pedido)"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.length > 0) {",
									"        pm.environment.set(\"product_id\", jsonData.data[0].id);",
									"        pm.test(\"Product ID saved\", function () {",
									"            pm.expect(jsonData.data[0].id).to.be.a('string');",
									"        });",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Add Order Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": \"{{product_id}}\",\n    \"quantity\": 2,\n    \"discount\": 10.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/orders/{{order_id}}/items",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders", "{{order_id}}", "items"]
						},
						"description": "Adiciona um item ao pedido (busca produto do Inventory Service)"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.test(\"Item added successfully\", function () {",
									"        pm.expect(jsonData.message).to.include('successfully');",
									"        pm.expect(jsonData.data.items_count).to.be.above(0);",
									"        pm.expect(jsonData.data.total).to.be.above(0);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Confirm Order",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/orders/{{order_id}}/confirm",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders", "{{order_id}}", "confirm"]
						},
						"description": "Confirma o pedido, mudando status de draft para confirmed"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.test(\"Order confirmed\", function () {",
									"        pm.expect(jsonData.message).to.include('successfully');",
									"        pm.expect(jsonData.data.status).to.eql('confirmed');",
									"        pm.expect(jsonData.data.confirmed_at).to.not.be.null;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Cancel Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Cliente desistiu da compra\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/orders/{{order_id}}/cancel",
							"host": ["{{base_url}}"],
							"path": ["v1", "orders", "{{order_id}}", "cancel"]
						},
						"description": "Cancela um pedido"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.test(\"Order cancelled\", function () {",
									"        pm.expect(jsonData.message).to.include('successfully');",
									"        pm.expect(jsonData.data.status).to.eql('cancelled');",
									"        pm.expect(jsonData.data.cancelled_at).to.not.be.null;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	]
}