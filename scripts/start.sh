#!/bin/bash

# Script para iniciar toda a infraestrutura

set -e

echo "========================================="
echo "Iniciando Infraestrutura - ERP Microservices"
echo "========================================="
echo ""

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro."
    exit 1
fi

echo "‚úÖ Docker est√° rodando"
echo ""

# Verificar se docker compose existe
if ! docker compose version &> /dev/null; then
    echo "‚ùå docker compose n√£o encontrado. Por favor, instale o Docker Compose."
    exit 1
fi

echo "‚úÖ docker compose encontrado"
echo ""

# Criar diret√≥rios necess√°rios se n√£o existirem
echo "üìÅ Criando diret√≥rios necess√°rios..."
mkdir -p infrastructure/rabbitmq
mkdir -p infrastructure/prometheus
mkdir -p infrastructure/grafana/provisioning/datasources
mkdir -p infrastructure/logstash
echo "‚úÖ Diret√≥rios criados"
echo ""

# Verificar se arquivo docker-compose.yml existe
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå docker-compose.yml n√£o encontrado no diret√≥rio atual"
    exit 1
fi

# Baixar imagens
echo "üì• Baixando imagens Docker (pode levar alguns minutos)..."
docker compose pull

# Iniciar servi√ßos de infraestrutura
echo ""
echo "üöÄ Iniciando servi√ßos de infraestrutura..."
docker compose up -d

# Aguardar servi√ßos ficarem saud√°veis
echo ""
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
echo "   (isso pode levar 1-2 minutos)"
echo ""

sleep 10

# Verificar status dos servi√ßos
echo "üìä Status dos servi√ßos:"
docker compose ps

echo ""
echo "========================================="
echo "‚úÖ Infraestrutura iniciada com sucesso!"
echo "========================================="
echo ""
echo "üåê Servi√ßos dispon√≠veis:"
echo ""
echo "   Microservi√ßos:"
echo "   - Auth Service:       http://localhost:8000"
echo "   - Inventory Service:  http://localhost:8001"
echo "   - Sales Service:      http://localhost:8002"
echo ""
echo "   RabbitMQ:"
echo "   - Management: http://localhost:15672"
echo "   - User: admin / Password: admin123"
echo ""
echo "   Monitoring:"
echo "   - Grafana:    http://localhost:3000 (admin/admin123)"
echo "   - Prometheus: http://localhost:9090"
echo "   - Alertmgr:   http://localhost:9093"
echo ""
echo "   Observability:"
echo "   - Jaeger:     http://localhost:16686"
echo "   - Kibana:     http://localhost:5601"
echo "   - Elastic:    http://localhost:9200"
echo ""
echo "   Cache & Storage:"
echo "   - Redis:      localhost:6379 (password: redis123)"
echo ""
echo "========================================="
echo ""
echo "üìù Pr√≥ximos passos:"
echo "   1. Verificar logs: ./scripts/logs.sh"
echo "   2. Ver status: ./scripts/status.sh"
echo "   3. Parar tudo: ./scripts/stop.sh"
echo ""
echo "üìö Documenta√ß√£o completa em: ./docs/"
echo ""

